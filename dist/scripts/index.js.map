{
  "version": 3,
  "sources": ["../../dist/_snowpack/pkg/alpinejs.js", "../../dist/scripts/index.js"],
  "sourcesContent": ["var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar alpine = createCommonjsModule(function (module, exports) {\n(function (global, factory) {\n  module.exports = factory() ;\n}(commonjsGlobal, (function () {\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  // Thanks @stimulus:\n  // https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\n  function domReady() {\n    return new Promise(resolve => {\n      if (document.readyState == \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n  function arrayUnique(array) {\n    return Array.from(new Set(array));\n  }\n  function isTesting() {\n    return navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\");\n  }\n  function checkedAttrLooseCompare(valueA, valueB) {\n    return valueA == valueB;\n  }\n  function warnIfMalformedTemplate(el, directive) {\n    if (el.tagName.toLowerCase() !== 'template') {\n      console.warn(`Alpine: [${directive}] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#${directive}`);\n    } else if (el.content.childElementCount !== 1) {\n      console.warn(`Alpine: <template> tag with [${directive}] encountered with an unexpected number of root elements. Make sure <template> has a single root element. `);\n    }\n  }\n  function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase();\n  }\n  function camelCase(subject) {\n    return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n  }\n  function walk(el, callback) {\n    if (callback(el) === false) return;\n    let node = el.firstElementChild;\n\n    while (node) {\n      walk(node, callback);\n      node = node.nextElementSibling;\n    }\n  }\n  function debounce(func, wait) {\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        func.apply(context, args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  const handleError = (el, expression, error) => {\n    console.warn(`Alpine Error: \"${error}\"\\n\\nExpression: \"${expression}\"\\nElement:`, el);\n\n    if (!isTesting()) {\n      Object.assign(error, {\n        el,\n        expression\n      });\n      throw error;\n    }\n  };\n\n  function tryCatch(cb, {\n    el,\n    expression\n  }) {\n    try {\n      const value = cb();\n      return value instanceof Promise ? value.catch(e => handleError(el, expression, e)) : value;\n    } catch (e) {\n      handleError(el, expression, e);\n    }\n  }\n\n  function saferEval(el, expression, dataContext, additionalHelperVariables = {}) {\n    return tryCatch(() => {\n      if (typeof expression === 'function') {\n        return expression.call(dataContext);\n      }\n\n      return new Function(['$data', ...Object.keys(additionalHelperVariables)], `var __alpine_result; with($data) { __alpine_result = ${expression} }; return __alpine_result`)(dataContext, ...Object.values(additionalHelperVariables));\n    }, {\n      el,\n      expression\n    });\n  }\n  function saferEvalNoReturn(el, expression, dataContext, additionalHelperVariables = {}) {\n    return tryCatch(() => {\n      if (typeof expression === 'function') {\n        return Promise.resolve(expression.call(dataContext, additionalHelperVariables['$event']));\n      }\n\n      let AsyncFunction = Function;\n      /* MODERN-ONLY:START */\n\n      AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n      /* MODERN-ONLY:END */\n      // For the cases when users pass only a function reference to the caller: `x-on:click=\"foo\"`\n      // Where \"foo\" is a function. Also, we'll pass the function the event instance when we call it.\n\n      if (Object.keys(dataContext).includes(expression)) {\n        let methodReference = new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { return ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\n\n        if (typeof methodReference === 'function') {\n          return Promise.resolve(methodReference.call(dataContext, additionalHelperVariables['$event']));\n        } else {\n          return Promise.resolve();\n        }\n      }\n\n      return Promise.resolve(new AsyncFunction(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables)));\n    }, {\n      el,\n      expression\n    });\n  }\n  const xAttrRE = /^x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref|spread)\\b/;\n  function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name);\n    return xAttrRE.test(name);\n  }\n  function getXAttrs(el, component, type) {\n    let directives = Array.from(el.attributes).filter(isXAttr).map(parseHtmlAttribute); // Get an object of directives from x-spread.\n\n    let spreadDirective = directives.filter(directive => directive.type === 'spread')[0];\n\n    if (spreadDirective) {\n      let spreadObject = saferEval(el, spreadDirective.expression, component.$data); // Add x-spread directives to the pile of existing directives.\n\n      directives = directives.concat(Object.entries(spreadObject).map(([name, value]) => parseHtmlAttribute({\n        name,\n        value\n      })));\n    }\n\n    if (type) return directives.filter(i => i.type === type);\n    return sortDirectives(directives);\n  }\n\n  function sortDirectives(directives) {\n    let directiveOrder = ['bind', 'model', 'show', 'catch-all'];\n    return directives.sort((a, b) => {\n      let typeA = directiveOrder.indexOf(a.type) === -1 ? 'catch-all' : a.type;\n      let typeB = directiveOrder.indexOf(b.type) === -1 ? 'catch-all' : b.type;\n      return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\n    });\n  }\n\n  function parseHtmlAttribute({\n    name,\n    value\n  }) {\n    const normalizedName = replaceAtAndColonWithStandardSyntax(name);\n    const typeMatch = normalizedName.match(xAttrRE);\n    const valueMatch = normalizedName.match(/:([a-zA-Z0-9\\-:]+)/);\n    const modifiers = normalizedName.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\n    return {\n      type: typeMatch ? typeMatch[1] : null,\n      value: valueMatch ? valueMatch[1] : null,\n      modifiers: modifiers.map(i => i.replace('.', '')),\n      expression: value\n    };\n  }\n  function isBooleanAttr(attrName) {\n    // As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute\n    // Array roughly ordered by estimated usage\n    const booleanAttributes = ['disabled', 'checked', 'required', 'readonly', 'hidden', 'open', 'selected', 'autofocus', 'itemscope', 'multiple', 'novalidate', 'allowfullscreen', 'allowpaymentrequest', 'formnovalidate', 'autoplay', 'controls', 'loop', 'muted', 'playsinline', 'default', 'ismap', 'reversed', 'async', 'defer', 'nomodule'];\n    return booleanAttributes.includes(attrName);\n  }\n  function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n      return name.replace('@', 'x-on:');\n    } else if (name.startsWith(':')) {\n      return name.replace(':', 'x-bind:');\n    }\n\n    return name;\n  }\n  function convertClassStringToArray(classList, filterFn = Boolean) {\n    return classList.split(' ').filter(filterFn);\n  }\n  const TRANSITION_TYPE_IN = 'in';\n  const TRANSITION_TYPE_OUT = 'out';\n  const TRANSITION_CANCELLED = 'cancelled';\n  function transitionIn(el, show, reject, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return show();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_IN) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0]; // If this is triggered by a x-show.transition.\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers; // If x-show.transition.out, we'll skip the \"in\" transition.\n\n      if (modifiers.includes('out') && !modifiers.includes('in')) return show();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out'); // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\n\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers;\n      transitionHelperIn(el, modifiers, show, reject); // Otherwise, we can assume x-transition:enter.\n    } else if (attrs.some(attr => ['enter', 'enter-start', 'enter-end'].includes(attr.value))) {\n      transitionClassesIn(el, component, attrs, show, reject);\n    } else {\n      // If neither, just show that damn thing.\n      show();\n    }\n  }\n  function transitionOut(el, hide, reject, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return hide();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_OUT) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0];\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers;\n      if (modifiers.includes('in') && !modifiers.includes('out')) return hide();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out');\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers;\n      transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide, reject);\n    } else if (attrs.some(attr => ['leave', 'leave-start', 'leave-end'].includes(attr.value))) {\n      transitionClassesOut(el, component, attrs, hide, reject);\n    } else {\n      hide();\n    }\n  }\n  function transitionHelperIn(el, modifiers, showCallback, reject) {\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\n    const styleValues = {\n      duration: modifierValue(modifiers, 'duration', 150),\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      },\n      second: {\n        opacity: 1,\n        scale: 100\n      }\n    };\n    transitionHelper(el, modifiers, showCallback, () => {}, reject, styleValues, TRANSITION_TYPE_IN);\n  }\n  function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback, reject) {\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\n    // use that.\n    const duration = settingBothSidesOfTransition ? modifierValue(modifiers, 'duration', 150) : modifierValue(modifiers, 'duration', 150) / 2;\n    const styleValues = {\n      duration: duration,\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 1,\n        scale: 100\n      },\n      second: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      }\n    };\n    transitionHelper(el, modifiers, () => {}, hideCallback, reject, styleValues, TRANSITION_TYPE_OUT);\n  }\n\n  function modifierValue(modifiers, key, fallback) {\n    // If the modifier isn't present, use the default.\n    if (modifiers.indexOf(key) === -1) return fallback; // If it IS present, grab the value after it: x-show.transition.duration.500ms\n\n    const rawValue = modifiers[modifiers.indexOf(key) + 1];\n    if (!rawValue) return fallback;\n\n    if (key === 'scale') {\n      // Check if the very next value is NOT a number and return the fallback.\n      // If x-show.transition.scale, we'll use the default scale value.\n      // That is how a user opts out of the opacity transition.\n      if (!isNumeric(rawValue)) return fallback;\n    }\n\n    if (key === 'duration') {\n      // Support x-show.transition.duration.500ms && duration.500\n      let match = rawValue.match(/([0-9]+)ms/);\n      if (match) return match[1];\n    }\n\n    if (key === 'origin') {\n      // Support chaining origin directions: x-show.transition.top.right\n      if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\n        return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ');\n      }\n    }\n\n    return rawValue;\n  }\n\n  function transitionHelper(el, modifiers, hook1, hook2, reject, styleValues, type) {\n    // clear the previous transition if exists to avoid caching the wrong styles\n    if (el.__x_transition) {\n      el.__x_transition.cancel && el.__x_transition.cancel();\n    } // If the user set these style values, we'll put them back when we're done with them.\n\n\n    const opacityCache = el.style.opacity;\n    const transformCache = el.style.transform;\n    const transformOriginCache = el.style.transformOrigin; // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\n\n    const noModifiers = !modifiers.includes('opacity') && !modifiers.includes('scale');\n    const transitionOpacity = noModifiers || modifiers.includes('opacity');\n    const transitionScale = noModifiers || modifiers.includes('scale'); // These are the explicit stages of a transition (same stages for in and for out).\n    // This way you can get a birds eye view of the hooks, and the differences\n    // between them.\n\n    const stages = {\n      start() {\n        if (transitionOpacity) el.style.opacity = styleValues.first.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`;\n      },\n\n      during() {\n        if (transitionScale) el.style.transformOrigin = styleValues.origin;\n        el.style.transitionProperty = [transitionOpacity ? `opacity` : ``, transitionScale ? `transform` : ``].join(' ').trim();\n        el.style.transitionDuration = `${styleValues.duration / 1000}s`;\n        el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        if (transitionOpacity) el.style.opacity = styleValues.second.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`;\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        if (transitionOpacity) el.style.opacity = opacityCache;\n        if (transitionScale) el.style.transform = transformCache;\n        if (transitionScale) el.style.transformOrigin = transformOriginCache;\n        el.style.transitionProperty = null;\n        el.style.transitionDuration = null;\n        el.style.transitionTimingFunction = null;\n      }\n\n    };\n    transition(el, stages, type, reject);\n  }\n\n  const ensureStringExpression = (expression, el, component) => {\n    return typeof expression === 'function' ? component.evaluateReturnExpression(el, expression) : expression;\n  };\n\n  function transitionClassesIn(el, component, directives, showCallback, reject) {\n    const enter = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter') || {\n      expression: ''\n    }).expression, el, component));\n    const enterStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-start') || {\n      expression: ''\n    }).expression, el, component));\n    const enterEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-end') || {\n      expression: ''\n    }).expression, el, component));\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {}, TRANSITION_TYPE_IN, reject);\n  }\n  function transitionClassesOut(el, component, directives, hideCallback, reject) {\n    const leave = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave') || {\n      expression: ''\n    }).expression, el, component));\n    const leaveStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-start') || {\n      expression: ''\n    }).expression, el, component));\n    const leaveEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-end') || {\n      expression: ''\n    }).expression, el, component));\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback, TRANSITION_TYPE_OUT, reject);\n  }\n  function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2, type, reject) {\n    // clear the previous transition if exists to avoid caching the wrong classes\n    if (el.__x_transition) {\n      el.__x_transition.cancel && el.__x_transition.cancel();\n    }\n\n    const originalClasses = el.__x_original_classes || [];\n    const stages = {\n      start() {\n        el.classList.add(...classesStart);\n      },\n\n      during() {\n        el.classList.add(...classesDuring);\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        // Don't remove classes that were in the original class attribute.\n        el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)));\n        el.classList.add(...classesEnd);\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)));\n        el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)));\n      }\n\n    };\n    transition(el, stages, type, reject);\n  }\n  function transition(el, stages, type, reject) {\n    const finish = once(() => {\n      stages.hide(); // Adding an \"isConnected\" check, in case the callback\n      // removed the element from the DOM.\n\n      if (el.isConnected) {\n        stages.cleanup();\n      }\n\n      delete el.__x_transition;\n    });\n    el.__x_transition = {\n      // Set transition type so we can avoid clearing transition if the direction is the same\n      type: type,\n      // create a callback for the last stages of the transition so we can call it\n      // from different point and early terminate it. Once will ensure that function\n      // is only called one time.\n      cancel: once(() => {\n        reject(TRANSITION_CANCELLED);\n        finish();\n      }),\n      finish,\n      // This store the next animation frame so we can cancel it\n      nextFrame: null\n    };\n    stages.start();\n    stages.during();\n    el.__x_transition.nextFrame = requestAnimationFrame(() => {\n      // Note: Safari's transitionDuration property will list out comma separated transition durations\n      // for every single transition property. Let's grab the first one and call it a day.\n      let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000;\n\n      if (duration === 0) {\n        duration = Number(getComputedStyle(el).animationDuration.replace('s', '')) * 1000;\n      }\n\n      stages.show();\n      el.__x_transition.nextFrame = requestAnimationFrame(() => {\n        stages.end();\n        setTimeout(el.__x_transition.finish, duration);\n      });\n    });\n  }\n  function isNumeric(subject) {\n    return !Array.isArray(subject) && !isNaN(subject);\n  } // Thanks @vuejs\n  // https://github.com/vuejs/vue/blob/4de4649d9637262a9b007720b59f80ac72a5620c/src/shared/util.js\n\n  function once(callback) {\n    let called = false;\n    return function () {\n      if (!called) {\n        called = true;\n        callback.apply(this, arguments);\n      }\n    };\n  }\n\n  function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(templateEl, 'x-for');\n    let iteratorNames = typeof expression === 'function' ? parseForExpression(component.evaluateReturnExpression(templateEl, expression)) : parseForExpression(expression);\n    let items = evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, templateEl, iteratorNames, extraVars); // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n\n    let currentEl = templateEl;\n    items.forEach((item, index) => {\n      let iterationScopeVariables = getIterationScopeVariables(iteratorNames, item, index, items, extraVars());\n      let currentKey = generateKeyForIteration(component, templateEl, index, iterationScopeVariables);\n      let nextEl = lookAheadForMatchingKeyedElementAndMoveItIfFound(currentEl.nextElementSibling, currentKey); // If we haven't found a matching key, insert the element at the current position.\n\n      if (!nextEl) {\n        nextEl = addElementInLoopAfterCurrentEl(templateEl, currentEl); // And transition it in if it's not the first page load.\n\n        transitionIn(nextEl, () => {}, () => {}, component, initialUpdate);\n        nextEl.__x_for = iterationScopeVariables;\n        component.initializeElements(nextEl, () => nextEl.__x_for); // Otherwise update the element we found.\n      } else {\n        // Temporarily remove the key indicator to allow the normal \"updateElements\" to work.\n        delete nextEl.__x_for_key;\n        nextEl.__x_for = iterationScopeVariables;\n        component.updateElements(nextEl, () => nextEl.__x_for);\n      }\n\n      currentEl = nextEl;\n      currentEl.__x_for_key = currentKey;\n    });\n    removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component);\n  } // This was taken from VueJS 2.* core. Thanks Vue!\n\n  function parseForExpression(expression) {\n    let forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n    let stripParensRE = /^\\(|\\)$/g;\n    let forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n    let inMatch = String(expression).match(forAliasRE);\n    if (!inMatch) return;\n    let res = {};\n    res.items = inMatch[2].trim();\n    let item = inMatch[1].trim().replace(stripParensRE, '');\n    let iteratorMatch = item.match(forIteratorRE);\n\n    if (iteratorMatch) {\n      res.item = item.replace(forIteratorRE, '').trim();\n      res.index = iteratorMatch[1].trim();\n\n      if (iteratorMatch[2]) {\n        res.collection = iteratorMatch[2].trim();\n      }\n    } else {\n      res.item = item;\n    }\n\n    return res;\n  }\n\n  function getIterationScopeVariables(iteratorNames, item, index, items, extraVars) {\n    // We must create a new object, so each iteration has a new scope\n    let scopeVariables = extraVars ? _objectSpread2({}, extraVars) : {};\n    scopeVariables[iteratorNames.item] = item;\n    if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;\n    if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;\n    return scopeVariables;\n  }\n\n  function generateKeyForIteration(component, el, index, iterationScopeVariables) {\n    let bindKeyAttribute = getXAttrs(el, component, 'bind').filter(attr => attr.value === 'key')[0]; // If the dev hasn't specified a key, just return the index of the iteration.\n\n    if (!bindKeyAttribute) return index;\n    return component.evaluateReturnExpression(el, bindKeyAttribute.expression, () => iterationScopeVariables);\n  }\n\n  function evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, el, iteratorNames, extraVars) {\n    let ifAttribute = getXAttrs(el, component, 'if')[0];\n\n    if (ifAttribute && !component.evaluateReturnExpression(el, ifAttribute.expression)) {\n      return [];\n    }\n\n    let items = component.evaluateReturnExpression(el, iteratorNames.items, extraVars); // This adds support for the `i in n` syntax.\n\n    if (isNumeric(items) && items >= 0) {\n      items = Array.from(Array(items).keys(), i => i + 1);\n    }\n\n    return items;\n  }\n\n  function addElementInLoopAfterCurrentEl(templateEl, currentEl) {\n    let clone = document.importNode(templateEl.content, true);\n    currentEl.parentElement.insertBefore(clone, currentEl.nextElementSibling);\n    return currentEl.nextElementSibling;\n  }\n\n  function lookAheadForMatchingKeyedElementAndMoveItIfFound(nextEl, currentKey) {\n    if (!nextEl) return; // If we are already past the x-for generated elements, we don't need to look ahead.\n\n    if (nextEl.__x_for_key === undefined) return; // If the the key's DO match, no need to look ahead.\n\n    if (nextEl.__x_for_key === currentKey) return nextEl; // If they don't, we'll look ahead for a match.\n    // If we find it, we'll move it to the current position in the loop.\n\n    let tmpNextEl = nextEl;\n\n    while (tmpNextEl) {\n      if (tmpNextEl.__x_for_key === currentKey) {\n        return tmpNextEl.parentElement.insertBefore(tmpNextEl, nextEl);\n      }\n\n      tmpNextEl = tmpNextEl.nextElementSibling && tmpNextEl.nextElementSibling.__x_for_key !== undefined ? tmpNextEl.nextElementSibling : false;\n    }\n  }\n\n  function removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component) {\n    var nextElementFromOldLoop = currentEl.nextElementSibling && currentEl.nextElementSibling.__x_for_key !== undefined ? currentEl.nextElementSibling : false;\n\n    while (nextElementFromOldLoop) {\n      let nextElementFromOldLoopImmutable = nextElementFromOldLoop;\n      let nextSibling = nextElementFromOldLoop.nextElementSibling;\n      transitionOut(nextElementFromOldLoop, () => {\n        nextElementFromOldLoopImmutable.remove();\n      }, () => {}, component);\n      nextElementFromOldLoop = nextSibling && nextSibling.__x_for_key !== undefined ? nextSibling : false;\n    }\n  }\n\n  function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType, modifiers) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars);\n\n    if (attrName === 'value') {\n      if (Alpine.ignoreFocusedForValueBinding && document.activeElement.isSameNode(el)) return; // If nested model key is undefined, set the default value to empty string.\n\n      if (value === undefined && String(expression).match(/\\./)) {\n        value = '';\n      }\n\n      if (el.type === 'radio') {\n        // Set radio value from x-bind:value, if no \"value\" attribute exists.\n        // If there are any initial state values, radio will have a correct\n        // \"checked\" value since x-bind:value is processed before x-model.\n        if (el.attributes.value === undefined && attrType === 'bind') {\n          el.value = value;\n        } else if (attrType !== 'bind') {\n          el.checked = checkedAttrLooseCompare(el.value, value);\n        }\n      } else if (el.type === 'checkbox') {\n        // If we are explicitly binding a string to the :value, set the string,\n        // If the value is a boolean, leave it alone, it will be set to \"on\"\n        // automatically.\n        if (typeof value !== 'boolean' && ![null, undefined].includes(value) && attrType === 'bind') {\n          el.value = String(value);\n        } else if (attrType !== 'bind') {\n          if (Array.isArray(value)) {\n            // I'm purposely not using Array.includes here because it's\n            // strict, and because of Numeric/String mis-casting, I\n            // want the \"includes\" to be \"fuzzy\".\n            el.checked = value.some(val => checkedAttrLooseCompare(val, el.value));\n          } else {\n            el.checked = !!value;\n          }\n        }\n      } else if (el.tagName === 'SELECT') {\n        updateSelect(el, value);\n      } else {\n        if (el.value === value) return;\n        el.value = value;\n      }\n    } else if (attrName === 'class') {\n      if (Array.isArray(value)) {\n        const originalClasses = el.__x_original_classes || [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '));\n      } else if (typeof value === 'object') {\n        // Sorting the keys / class names by their boolean value will ensure that\n        // anything that evaluates to `false` and needs to remove classes is run first.\n        const keysSortedByBooleanValue = Object.keys(value).sort((a, b) => value[a] - value[b]);\n        keysSortedByBooleanValue.forEach(classNames => {\n          if (value[classNames]) {\n            convertClassStringToArray(classNames).forEach(className => el.classList.add(className));\n          } else {\n            convertClassStringToArray(classNames).forEach(className => el.classList.remove(className));\n          }\n        });\n      } else {\n        const originalClasses = el.__x_original_classes || [];\n        const newClasses = value ? convertClassStringToArray(value) : [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '));\n      }\n    } else {\n      attrName = modifiers.includes('camel') ? camelCase(attrName) : attrName; // If an attribute's bound value is null, undefined or false, remove the attribute\n\n      if ([null, undefined, false].includes(value)) {\n        el.removeAttribute(attrName);\n      } else {\n        isBooleanAttr(attrName) ? setIfChanged(el, attrName, attrName) : setIfChanged(el, attrName, value);\n      }\n    }\n  }\n\n  function setIfChanged(el, attrName, value) {\n    if (el.getAttribute(attrName) != value) {\n      el.setAttribute(attrName, value);\n    }\n  }\n\n  function updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => {\n      return value + '';\n    });\n    Array.from(el.options).forEach(option => {\n      option.selected = arrayWrappedValue.includes(option.value || option.text);\n    });\n  }\n\n  function handleTextDirective(el, output, expression) {\n    // If nested model key is undefined, set the default value to empty string.\n    if (output === undefined && String(expression).match(/\\./)) {\n      output = '';\n    }\n\n    el.textContent = output;\n  }\n\n  function handleHtmlDirective(component, el, expression, extraVars) {\n    el.innerHTML = component.evaluateReturnExpression(el, expression, extraVars);\n  }\n\n  function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\n    const hide = () => {\n      el.style.display = 'none';\n      el.__x_is_shown = false;\n    };\n\n    const show = () => {\n      if (el.style.length === 1 && el.style.display === 'none') {\n        el.removeAttribute('style');\n      } else {\n        el.style.removeProperty('display');\n      }\n\n      el.__x_is_shown = true;\n    };\n\n    if (initialUpdate === true) {\n      if (value) {\n        show();\n      } else {\n        hide();\n      }\n\n      return;\n    }\n\n    const handle = (resolve, reject) => {\n      if (value) {\n        if (el.style.display === 'none' || el.__x_transition) {\n          transitionIn(el, () => {\n            show();\n          }, reject, component);\n        }\n\n        resolve(() => {});\n      } else {\n        if (el.style.display !== 'none') {\n          transitionOut(el, () => {\n            resolve(() => {\n              hide();\n            });\n          }, reject, component);\n        } else {\n          resolve(() => {});\n        }\n      }\n    }; // The working of x-show is a bit complex because we need to\n    // wait for any child transitions to finish before hiding\n    // some element. Also, this has to be done recursively.\n    // If x-show.immediate, foregoe the waiting.\n\n\n    if (modifiers.includes('immediate')) {\n      handle(finish => finish(), () => {});\n      return;\n    } // x-show is encountered during a DOM tree walk. If an element\n    // we encounter is NOT a child of another x-show element we\n    // can execute the previous x-show stack (if one exists).\n\n\n    if (component.showDirectiveLastElement && !component.showDirectiveLastElement.contains(el)) {\n      component.executeAndClearRemainingShowDirectiveStack();\n    }\n\n    component.showDirectiveStack.push(handle);\n    component.showDirectiveLastElement = el;\n  }\n\n  function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(el, 'x-if');\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true;\n\n    if (expressionResult && (!elementHasAlreadyBeenAdded || el.__x_transition)) {\n      const clone = document.importNode(el.content, true);\n      el.parentElement.insertBefore(clone, el.nextElementSibling);\n      transitionIn(el.nextElementSibling, () => {}, () => {}, component, initialUpdate);\n      component.initializeElements(el.nextElementSibling, extraVars);\n      el.nextElementSibling.__x_inserted_me = true;\n    } else if (!expressionResult && elementHasAlreadyBeenAdded) {\n      transitionOut(el.nextElementSibling, () => {\n        el.nextElementSibling.remove();\n      }, () => {}, component, initialUpdate);\n    }\n  }\n\n  function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    const options = {\n      passive: modifiers.includes('passive')\n    };\n\n    if (modifiers.includes('camel')) {\n      event = camelCase(event);\n    }\n\n    let handler, listenerTarget;\n\n    if (modifiers.includes('away')) {\n      listenerTarget = document;\n\n      handler = e => {\n        // Don't do anything if the click came from the element or within it.\n        if (el.contains(e.target)) return; // Don't do anything if this element isn't currently visible.\n\n        if (el.offsetWidth < 1 && el.offsetHeight < 1) return; // Now that we are sure the element is visible, AND the click\n        // is from outside it, let's run the expression.\n\n        runListenerHandler(component, expression, e, extraVars);\n\n        if (modifiers.includes('once')) {\n          document.removeEventListener(event, handler, options);\n        }\n      };\n    } else {\n      listenerTarget = modifiers.includes('window') ? window : modifiers.includes('document') ? document : el;\n\n      handler = e => {\n        // Remove this global event handler if the element that declared it\n        // has been removed. It's now stale.\n        if (listenerTarget === window || listenerTarget === document) {\n          if (!document.body.contains(el)) {\n            listenerTarget.removeEventListener(event, handler, options);\n            return;\n          }\n        }\n\n        if (isKeyEvent(event)) {\n          if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n            return;\n          }\n        }\n\n        if (modifiers.includes('prevent')) e.preventDefault();\n        if (modifiers.includes('stop')) e.stopPropagation(); // If the .self modifier isn't present, or if it is present and\n        // the target element matches the element we are registering the\n        // event on, run the handler\n\n        if (!modifiers.includes('self') || e.target === el) {\n          const returnValue = runListenerHandler(component, expression, e, extraVars);\n          returnValue.then(value => {\n            if (value === false) {\n              e.preventDefault();\n            } else {\n              if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler, options);\n              }\n            }\n          });\n        }\n      };\n    }\n\n    if (modifiers.includes('debounce')) {\n      let nextModifier = modifiers[modifiers.indexOf('debounce') + 1] || 'invalid-wait';\n      let wait = isNumeric(nextModifier.split('ms')[0]) ? Number(nextModifier.split('ms')[0]) : 250;\n      handler = debounce(handler, wait);\n    }\n\n    listenerTarget.addEventListener(event, handler, options);\n  }\n\n  function runListenerHandler(component, expression, e, extraVars) {\n    return component.evaluateCommandExpression(e.target, expression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        '$event': e\n      });\n    });\n  }\n\n  function isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event);\n  }\n\n  function isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n      return !['window', 'document', 'prevent', 'stop'].includes(i);\n    });\n\n    if (keyModifiers.includes('debounce')) {\n      let debounceIndex = keyModifiers.indexOf('debounce');\n      keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || 'invalid-wait').split('ms')[0]) ? 2 : 1);\n    } // If no modifier is specified, we'll call it a press.\n\n\n    if (keyModifiers.length === 0) return false; // If one is passed, AND it matches the key pressed, we'll call it a press.\n\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false; // The user is listening for key combinations.\n\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super'];\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\n    keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\n\n    if (selectedSystemKeyModifiers.length > 0) {\n      const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n        // Alias \"cmd\" and \"super\" to \"meta\"\n        if (modifier === 'cmd' || modifier === 'super') modifier = 'meta';\n        return e[`${modifier}Key`];\n      }); // If all the modifiers selected are pressed, ...\n\n      if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n        // AND the remaining key is pressed as well. It's a press.\n        if (keyModifiers[0] === keyToModifier(e.key)) return false;\n      }\n    } // We'll call it NOT a valid keypress.\n\n\n    return true;\n  }\n\n  function keyToModifier(key) {\n    switch (key) {\n      case '/':\n        return 'slash';\n\n      case ' ':\n      case 'Spacebar':\n        return 'space';\n\n      default:\n        return key && kebabCase(key);\n    }\n  }\n\n  function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = el.tagName.toLowerCase() === 'select' || ['checkbox', 'radio'].includes(el.type) || modifiers.includes('lazy') ? 'change' : 'input';\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression)\n      });\n    });\n  }\n\n  function generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n      // Radio buttons only work properly when they share a name attribute.\n      // People might assume we take care of that for them, because\n      // they already set a shared \"x-model\" attribute.\n      if (!el.hasAttribute('name')) el.setAttribute('name', expression);\n    }\n\n    return (event, currentValue) => {\n      // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\n      if (event instanceof CustomEvent && event.detail) {\n        return event.detail;\n      } else if (el.type === 'checkbox') {\n        // If the data we are binding to is an array, toggle its value inside the array.\n        if (Array.isArray(currentValue)) {\n          const newValue = modifiers.includes('number') ? safeParseNumber(event.target.value) : event.target.value;\n          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(el => !checkedAttrLooseCompare(el, newValue));\n        } else {\n          return event.target.checked;\n        }\n      } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n        return modifiers.includes('number') ? Array.from(event.target.selectedOptions).map(option => {\n          const rawValue = option.value || option.text;\n          return safeParseNumber(rawValue);\n        }) : Array.from(event.target.selectedOptions).map(option => {\n          return option.value || option.text;\n        });\n      } else {\n        const rawValue = event.target.value;\n        return modifiers.includes('number') ? safeParseNumber(rawValue) : modifiers.includes('trim') ? rawValue.trim() : rawValue;\n      }\n    };\n  }\n\n  function safeParseNumber(rawValue) {\n    const number = rawValue ? parseFloat(rawValue) : null;\n    return isNumeric(number) ? number : rawValue;\n  }\n\n  /**\n   * Copyright (C) 2017 salesforce.com, inc.\n   */\n  const { isArray } = Array;\n  const { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\n  const { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\n  function isUndefined(obj) {\n      return obj === undefined;\n  }\n  function isFunction(obj) {\n      return typeof obj === 'function';\n  }\n  function isObject(obj) {\n      return typeof obj === 'object';\n  }\n  const proxyToValueMap = new WeakMap();\n  function registerProxy(proxy, value) {\n      proxyToValueMap.set(proxy, value);\n  }\n  const unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\n  function wrapValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n  }\n  /**\n   * Unwrap property descriptors will set value on original descriptor\n   * We only need to unwrap if value is specified\n   * @param descriptor external descrpitor provided to define new property on original value\n   */\n  function unwrapDescriptor(descriptor) {\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = unwrap(descriptor.value);\n      }\n      return descriptor;\n  }\n  function lockShadowTarget(membrane, shadowTarget, originalTarget) {\n      const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      targetKeys.forEach((key) => {\n          let descriptor = getOwnPropertyDescriptor(originalTarget, key);\n          // We do not need to wrap the descriptor if configurable\n          // Because we can deal with wrapping it when user goes through\n          // Get own property descriptor. There is also a chance that this descriptor\n          // could change sometime in the future, so we can defer wrapping\n          // until we need to\n          if (!descriptor.configurable) {\n              descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n          }\n          ObjectDefineProperty(shadowTarget, key, descriptor);\n      });\n      preventExtensions(shadowTarget);\n  }\n  class ReactiveProxyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          const oldValue = originalTarget[key];\n          if (oldValue !== value) {\n              originalTarget[key] = value;\n              valueMutated(originalTarget, key);\n          }\n          else if (key === 'length' && isArray(originalTarget)) {\n              // fix for issue #236: push will add the new index, and by the time length\n              // is updated, the internal length is already equal to the new length value\n              // therefore, the oldValue is equal to the value. This is the forking logic\n              // to support this use case.\n              valueMutated(originalTarget, key);\n          }\n          return true;\n      }\n      deleteProperty(shadowTarget, key) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          delete originalTarget[key];\n          valueMutated(originalTarget, key);\n          return true;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      isExtensible(shadowTarget) {\n          const shadowIsExtensible = isExtensible(shadowTarget);\n          if (!shadowIsExtensible) {\n              return shadowIsExtensible;\n          }\n          const { originalTarget, membrane } = this;\n          const targetIsExtensible = isExtensible(originalTarget);\n          if (!targetIsExtensible) {\n              lockShadowTarget(membrane, shadowTarget, originalTarget);\n          }\n          return targetIsExtensible;\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getPrototypeOf(shadowTarget) {\n          const { originalTarget } = this;\n          return getPrototypeOf(originalTarget);\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = this.membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value, setter or getter (if available) cannot observe\n          // mutations, just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapValue);\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          const { originalTarget, membrane } = this;\n          lockShadowTarget(membrane, shadowTarget, originalTarget);\n          preventExtensions(originalTarget);\n          return true;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          const { originalTarget, membrane } = this;\n          const { valueMutated } = membrane;\n          const { configurable } = descriptor;\n          // We have to check for value in descriptor\n          // because Object.freeze(proxy) calls this method\n          // with only { configurable: false, writeable: false }\n          // Additionally, method will only be called with writeable:false\n          // if the descriptor has a value, as opposed to getter/setter\n          // So we can just check if writable is present and then see if\n          // value is present. This eliminates getter and setter descriptors\n          if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\n              const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n              descriptor.value = originalDescriptor.value;\n          }\n          ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n          if (configurable === false) {\n              ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n          }\n          valueMutated(originalTarget, key);\n          return true;\n      }\n  }\n\n  function wrapReadOnlyValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n  }\n  class ReadOnlyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { membrane, originalTarget } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getReadOnlyProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          return false;\n      }\n      deleteProperty(shadowTarget, key) {\n          return false;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value or getter (if available) cannot be observed,\n          // just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n          if (hasOwnProperty.call(desc, 'set')) {\n              desc.set = undefined; // readOnly membrane does not allow setters\n          }\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          return false;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          return false;\n      }\n  }\n  function createShadowTarget(value) {\n      let shadowTarget = undefined;\n      if (isArray(value)) {\n          shadowTarget = [];\n      }\n      else if (isObject(value)) {\n          shadowTarget = {};\n      }\n      return shadowTarget;\n  }\n  const ObjectDotPrototype = Object.prototype;\n  function defaultValueIsObservable(value) {\n      // intentionally checking for null\n      if (value === null) {\n          return false;\n      }\n      // treat all non-object types, including undefined, as non-observable values\n      if (typeof value !== 'object') {\n          return false;\n      }\n      if (isArray(value)) {\n          return true;\n      }\n      const proto = getPrototypeOf(value);\n      return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\n  }\n  const defaultValueObserved = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueMutated = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueDistortion = (value) => value;\n  function wrapDescriptor(membrane, descriptor, getValue) {\n      const { set, get } = descriptor;\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = getValue(membrane, descriptor.value);\n      }\n      else {\n          if (!isUndefined(get)) {\n              descriptor.get = function () {\n                  // invoking the original getter with the original target\n                  return getValue(membrane, get.call(unwrap(this)));\n              };\n          }\n          if (!isUndefined(set)) {\n              descriptor.set = function (value) {\n                  // At this point we don't have a clear indication of whether\n                  // or not a valid mutation will occur, we don't have the key,\n                  // and we are not sure why and how they are invoking this setter.\n                  // Nevertheless we preserve the original semantics by invoking the\n                  // original setter with the original target and the unwrapped value\n                  set.call(unwrap(this), membrane.unwrapProxy(value));\n              };\n          }\n      }\n      return descriptor;\n  }\n  class ReactiveMembrane {\n      constructor(options) {\n          this.valueDistortion = defaultValueDistortion;\n          this.valueMutated = defaultValueMutated;\n          this.valueObserved = defaultValueObserved;\n          this.valueIsObservable = defaultValueIsObservable;\n          this.objectGraph = new WeakMap();\n          if (!isUndefined(options)) {\n              const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\n              this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\n              this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n              this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n              this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n          }\n      }\n      getProxy(value) {\n          const unwrappedValue = unwrap(value);\n          const distorted = this.valueDistortion(unwrappedValue);\n          if (this.valueIsObservable(distorted)) {\n              const o = this.getReactiveState(unwrappedValue, distorted);\n              // when trying to extract the writable version of a readonly\n              // we return the readonly.\n              return o.readOnly === value ? value : o.reactive;\n          }\n          return distorted;\n      }\n      getReadOnlyProxy(value) {\n          value = unwrap(value);\n          const distorted = this.valueDistortion(value);\n          if (this.valueIsObservable(distorted)) {\n              return this.getReactiveState(value, distorted).readOnly;\n          }\n          return distorted;\n      }\n      unwrapProxy(p) {\n          return unwrap(p);\n      }\n      getReactiveState(value, distortedValue) {\n          const { objectGraph, } = this;\n          let reactiveState = objectGraph.get(distortedValue);\n          if (reactiveState) {\n              return reactiveState;\n          }\n          const membrane = this;\n          reactiveState = {\n              get reactive() {\n                  const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\n                  // caching the reactive proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'reactive', { value: proxy });\n                  return proxy;\n              },\n              get readOnly() {\n                  const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\n                  // caching the readOnly proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'readOnly', { value: proxy });\n                  return proxy;\n              }\n          };\n          objectGraph.set(distortedValue, reactiveState);\n          return reactiveState;\n      }\n  }\n  /** version: 0.26.0 */\n\n  function wrap(data, mutationCallback) {\n\n    let membrane = new ReactiveMembrane({\n      valueMutated(target, key) {\n        mutationCallback(target, key);\n      }\n\n    });\n    return {\n      data: membrane.getProxy(data),\n      membrane: membrane\n    };\n  }\n  function unwrap$1(membrane, observable) {\n    let unwrappedData = membrane.unwrapProxy(observable);\n    let copy = {};\n    Object.keys(unwrappedData).forEach(key => {\n      if (['$el', '$refs', '$nextTick', '$watch'].includes(key)) return;\n      copy[key] = unwrappedData[key];\n    });\n    return copy;\n  }\n\n  class Component {\n    constructor(el, componentForClone = null) {\n      this.$el = el;\n      const dataAttr = this.$el.getAttribute('x-data');\n      const dataExpression = dataAttr === '' ? '{}' : dataAttr;\n      const initExpression = this.$el.getAttribute('x-init');\n      let dataExtras = {\n        $el: this.$el\n      };\n      let canonicalComponentElementReference = componentForClone ? componentForClone.$el : this.$el;\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(dataExtras, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference);\n          }\n        });\n      });\n      this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : saferEval(el, dataExpression, dataExtras);\n      // Construct a Proxy-based observable. This will be used to handle reactivity.\n\n      let {\n        membrane,\n        data\n      } = this.wrapDataInObservable(this.unobservedData);\n      this.$data = data;\n      this.membrane = membrane; // After making user-supplied data methods reactive, we can now add\n      // our magic properties to the original data for access.\n\n      this.unobservedData.$el = this.$el;\n      this.unobservedData.$refs = this.getRefsProxy();\n      this.nextTickStack = [];\n\n      this.unobservedData.$nextTick = callback => {\n        this.nextTickStack.push(callback);\n      };\n\n      this.watchers = {};\n\n      this.unobservedData.$watch = (property, callback) => {\n        if (!this.watchers[property]) this.watchers[property] = [];\n        this.watchers[property].push(callback);\n      };\n      /* MODERN-ONLY:START */\n      // We remove this piece of code from the legacy build.\n      // In IE11, we have already defined our helpers at this point.\n      // Register custom magic properties.\n\n\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(this.unobservedData, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference, this.$el);\n          }\n        });\n      });\n      /* MODERN-ONLY:END */\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement;\n      componentForClone || Alpine.onBeforeComponentInitializeds.forEach(callback => callback(this));\n      var initReturnedCallback; // If x-init is present AND we aren't cloning (skip x-init on clone)\n\n      if (initExpression && !componentForClone) {\n        // We want to allow data manipulation, but not trigger DOM updates just yet.\n        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n        this.pauseReactivity = true;\n        initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression);\n        this.pauseReactivity = false;\n      } // Register all our listeners and set all our attribute bindings.\n      // If we're cloning a component, the third parameter ensures no duplicate\n      // event listeners are registered (the mutation observer will take care of them)\n\n\n      this.initializeElements(this.$el, () => {}, componentForClone); // Use mutation observer to detect new elements being added within this component at run-time.\n      // Alpine's just so darn flexible amirite?\n\n      this.listenForNewElementsToInitialize();\n\n      if (typeof initReturnedCallback === 'function') {\n        // Run the callback returned from the \"x-init\" hook to allow the user to do stuff after\n        // Alpine's got it's grubby little paws all over everything.\n        initReturnedCallback.call(this.$data);\n      }\n\n      componentForClone || setTimeout(() => {\n        Alpine.onComponentInitializeds.forEach(callback => callback(this));\n      }, 0);\n    }\n\n    getUnobservedData() {\n      return unwrap$1(this.membrane, this.$data);\n    }\n\n    wrapDataInObservable(data) {\n      var self = this;\n      let updateDom = debounce(function () {\n        self.updateElements(self.$el);\n      }, 0);\n      return wrap(data, (target, key) => {\n        if (self.watchers[key]) {\n          // If there's a watcher for this specific key, run it.\n          self.watchers[key].forEach(callback => callback(target[key]));\n        } else if (Array.isArray(target)) {\n          // Arrays are special cases, if any of the items change, we consider the array as mutated.\n          Object.keys(self.watchers).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // Ignore length mutations since they would result in duplicate calls.\n            // For example, when calling push, we would get a mutation for the item's key\n            // and a second mutation for the length property.\n\n            if (key === 'length') return;\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData[part])) {\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target));\n              }\n\n              return comparisonData[part];\n            }, self.unobservedData);\n          });\n        } else {\n          // Let's walk through the watchers with \"dot-notation\" (foo.bar) and see\n          // if this mutation fits any of them.\n          Object.keys(self.watchers).filter(i => i.includes('.')).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // If this dot-notation watcher's last \"part\" doesn't match the current\n            // key, then skip it early for performance reasons.\n\n            if (key !== dotNotationParts[dotNotationParts.length - 1]) return; // Now, walk through the dot-notation \"parts\" recursively to find\n            // a match, and call the watcher if one's found.\n\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData)) {\n                // Run the watchers.\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target[key]));\n              }\n\n              return comparisonData[part];\n            }, self.unobservedData);\n          });\n        } // Don't react to data changes for cases like the `x-created` hook.\n\n\n        if (self.pauseReactivity) return;\n        updateDom();\n      });\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n      walk(el, el => {\n        // We've hit a component.\n        if (el.hasAttribute('x-data')) {\n          // If it's not the current one.\n          if (!el.isSameNode(this.$el)) {\n            // Initialize it if it's not.\n            if (!el.__x) initializeComponentCallback(el); // Now we'll let that sub-component deal with itself.\n\n            return false;\n          }\n        }\n\n        return callback(el);\n      });\n    }\n\n    initializeElements(rootEl, extraVars = () => {}, componentForClone = false) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop\n        if (el.__x_for_key !== undefined) return false; // Don't touch spawns from if directives\n\n        if (el.__x_inserted_me !== undefined) return false;\n        this.initializeElement(el, extraVars, componentForClone ? false : true);\n      }, el => {\n        if (!componentForClone) el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    initializeElement(el, extraVars, shouldRegisterListeners = true) {\n      // To support class attribute merging, we have to know what the element's\n      // original class attribute looked like for reference.\n      if (el.hasAttribute('class') && getXAttrs(el, this).length > 0) {\n        el.__x_original_classes = convertClassStringToArray(el.getAttribute('class'));\n      }\n\n      shouldRegisterListeners && this.registerListeners(el, extraVars);\n      this.resolveBoundAttributes(el, true, extraVars);\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n        if (el.__x_for_key !== undefined && !el.isSameNode(this.$el)) return false;\n        this.updateElement(el, extraVars);\n      }, el => {\n        el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    executeAndClearNextTickStack(el) {\n      // Skip spawns from alpine directives\n      if (el === this.$el && this.nextTickStack.length > 0) {\n        // We run the tick stack after the next frame to allow any\n        // running transitions to pass the initial show stage.\n        requestAnimationFrame(() => {\n          while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()();\n          }\n        });\n      }\n    }\n\n    executeAndClearRemainingShowDirectiveStack() {\n      // The goal here is to start all the x-show transitions\n      // and build a nested promise chain so that elements\n      // only hide when the children are finished hiding.\n      this.showDirectiveStack.reverse().map(handler => {\n        return new Promise((resolve, reject) => {\n          handler(resolve, reject);\n        });\n      }).reduce((promiseChain, promise) => {\n        return promiseChain.then(() => {\n          return promise.then(finishElement => {\n            finishElement();\n          });\n        });\n      }, Promise.resolve(() => {})).catch(e => {\n        if (e !== TRANSITION_CANCELLED) throw e;\n      }); // We've processed the handler stack. let's clear it.\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement = undefined;\n    }\n\n    updateElement(el, extraVars) {\n      this.resolveBoundAttributes(el, false, extraVars);\n    }\n\n    registerListeners(el, extraVars) {\n      getXAttrs(el, this).forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'on':\n            registerListener(this, el, value, modifiers, expression, extraVars);\n            break;\n\n          case 'model':\n            registerModelListener(this, el, modifiers, expression, extraVars);\n            break;\n        }\n      });\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n      let attrs = getXAttrs(el, this);\n      attrs.forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'model':\n            handleAttributeBindingDirective(this, el, 'value', expression, extraVars, type, modifiers);\n            break;\n\n          case 'bind':\n            // The :key binding on an x-for is special, ignore it.\n            if (el.tagName.toLowerCase() === 'template' && value === 'key') return;\n            handleAttributeBindingDirective(this, el, value, expression, extraVars, type, modifiers);\n            break;\n\n          case 'text':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleTextDirective(el, output, expression);\n            break;\n\n          case 'html':\n            handleHtmlDirective(this, el, expression, extraVars);\n            break;\n\n          case 'show':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleShowDirective(this, el, output, modifiers, initialUpdate);\n            break;\n\n          case 'if':\n            // If this element also has x-for on it, don't process x-if.\n            // We will let the \"x-for\" directive handle the \"if\"ing.\n            if (attrs.some(i => i.type === 'for')) return;\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleIfDirective(this, el, output, initialUpdate, extraVars);\n            break;\n\n          case 'for':\n            handleForDirective(this, el, expression, initialUpdate, extraVars);\n            break;\n\n          case 'cloak':\n            el.removeAttribute('x-cloak');\n            break;\n        }\n      });\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n      return saferEval(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n      return saferEvalNoReturn(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    getDispatchFunction(el) {\n      return (event, detail = {}) => {\n        el.dispatchEvent(new CustomEvent(event, {\n          detail,\n          bubbles: true\n        }));\n      };\n    }\n\n    listenForNewElementsToInitialize() {\n      const targetNode = this.$el;\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) {\n          // Filter out mutations triggered from child components.\n          const closestParentComponent = mutations[i].target.closest('[x-data]');\n          if (!(closestParentComponent && closestParentComponent.isSameNode(this.$el))) continue;\n\n          if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n            const xAttr = mutations[i].target.getAttribute('x-data') || '{}';\n            const rawData = saferEval(this.$el, xAttr, {\n              $el: this.$el\n            });\n            Object.keys(rawData).forEach(key => {\n              if (this.$data[key] !== rawData[key]) {\n                this.$data[key] = rawData[key];\n              }\n            });\n          }\n\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              if (node.nodeType !== 1 || node.__x_inserted_me) return;\n\n              if (node.matches('[x-data]') && !node.__x) {\n                node.__x = new Component(node);\n                return;\n              }\n\n              this.initializeElements(node);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n      var self = this;\n      var refObj = {};\n      // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n      // the DOM when the system needs something from it. This way, the framework is flexible and\n      // friendly to outside DOM changes from libraries like Vue/Livewire.\n      // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n\n      return new Proxy(refObj, {\n        get(object, property) {\n          if (property === '$isAlpineProxy') return true;\n          var ref; // We can't just query the DOM because it's hard to filter out refs in\n          // nested components.\n\n          self.walkAndSkipNestedComponents(self.$el, el => {\n            if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n              ref = el;\n            }\n          });\n          return ref;\n        }\n\n      });\n    }\n\n  }\n\n  const Alpine = {\n    version: \"2.8.2\",\n    pauseMutationObserver: false,\n    magicProperties: {},\n    onComponentInitializeds: [],\n    onBeforeComponentInitializeds: [],\n    ignoreFocusedForValueBinding: false,\n    start: async function start() {\n      if (!isTesting()) {\n        await domReady();\n      }\n\n      this.discoverComponents(el => {\n        this.initializeComponent(el);\n      }); // It's easier and more performant to just support Turbolinks than listen\n      // to MutationObserver mutations at the document level.\n\n      document.addEventListener(\"turbolinks:load\", () => {\n        this.discoverUninitializedComponents(el => {\n          this.initializeComponent(el);\n        });\n      });\n      this.listenForNewUninitializedComponentsAtRunTime();\n    },\n    discoverComponents: function discoverComponents(callback) {\n      const rootEls = document.querySelectorAll('[x-data]');\n      rootEls.forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    discoverUninitializedComponents: function discoverUninitializedComponents(callback, el = null) {\n      const rootEls = (el || document).querySelectorAll('[x-data]');\n      Array.from(rootEls).filter(el => el.__x === undefined).forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    listenForNewUninitializedComponentsAtRunTime: function listenForNewUninitializedComponentsAtRunTime() {\n      const targetNode = document.querySelector('body');\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        if (this.pauseMutationObserver) return;\n\n        for (let i = 0; i < mutations.length; i++) {\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              // Discard non-element nodes (like line-breaks)\n              if (node.nodeType !== 1) return; // Discard any changes happening within an existing component.\n              // They will take care of themselves.\n\n              if (node.parentElement && node.parentElement.closest('[x-data]')) return;\n              this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el);\n              }, node.parentElement);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    },\n    initializeComponent: function initializeComponent(el) {\n      if (!el.__x) {\n        // Wrap in a try/catch so that we don't prevent other components\n        // from initializing when one component contains an error.\n        try {\n          el.__x = new Component(el);\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          }, 0);\n        }\n      }\n    },\n    clone: function clone(component, newEl) {\n      if (!newEl.__x) {\n        newEl.__x = new Component(newEl, component);\n      }\n    },\n    addMagicProperty: function addMagicProperty(name, callback) {\n      this.magicProperties[name] = callback;\n    },\n    onComponentInitialized: function onComponentInitialized(callback) {\n      this.onComponentInitializeds.push(callback);\n    },\n    onBeforeComponentInitialized: function onBeforeComponentInitialized(callback) {\n      this.onBeforeComponentInitializeds.push(callback);\n    }\n  };\n\n  if (!isTesting()) {\n    window.Alpine = Alpine;\n\n    if (window.deferLoadingAlpine) {\n      window.deferLoadingAlpine(function () {\n        window.Alpine.start();\n      });\n    } else {\n      window.Alpine.start();\n    }\n  }\n\n  return Alpine;\n\n})));\n});\n\nexport default alpine;\n", "import '../_snowpack/pkg/alpinejs.js'\r\nimport Lazyload from \"https://cdn.skypack.dev/vanilla-lazyload\"\r\n  const lazyload = new Lazyload()"],
  "mappings": "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",
  "names": []
}
